{"mappings":"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","sources":["register/templates/js/circle.js"],"sourcesContent":["function init() {\r\n\r\n  // listen to the resize events\r\n  window.addEventListener('resize', onResize, false);\r\n  var camera;\r\n  var scene;\r\n  var renderer;\r\n\r\n  // create a scene, that will hold all our elements such as objects, cameras and lights.\r\n  scene = new THREE.Scene();\r\n\r\n  // create a camera, which defines where we're looking at.\r\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 10000000000);\r\n\r\n  // create a render and set the size\r\n  renderer = new THREE.WebGLRenderer();\r\n\r\n  renderer.setClearColor(new THREE.Color(0x212830));\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  renderer.shadowMap.enabled = true;\r\n  \r\n  //AxesHelper added here !\r\n  var axisHelperSize = 0.5;\r\n  var axisHelperWidth = 5;\r\n\r\n  var material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: axisHelperWidth });\r\n\r\n  var axisHelper = new THREE.AxesHelper(axisHelperSize,material)\r\n  axisHelper.scale.z = 0; //stops showing z axes\r\n  localToCameraAxesPlacement = new THREE.Vector3(-1.2 * camera.aspect,-1, -2); // make sure to update this on window resize\r\n\tscene.add(axisHelper)\r\n  \r\n  // initialize the trackball controls and the clock which is needed\r\n  var trackballControls = initTrackballControls(camera, renderer);\r\n  var clock = new THREE.Clock();\r\n\r\n  //Grid Helper\r\n  const gridHelper = new THREE.GridHelper(10000000, 1000000, 0xaec6cf, 0xaec6cf)\r\n  gridHelper.rotation.x = -0.5*Math.PI;\r\n  scene.add(gridHelper)\r\n\r\n  // position and point the camera to the center of the scene\r\n  camera.position.x = 0;\r\n  camera.position.y = 0;\r\n  camera.position.z = 100;\r\n  camera.lookAt(scene.position);\r\n\r\n  // add subtle ambient lighting\r\n  var ambienLight = new THREE.AmbientLight(0x353535);\r\n  scene.add(ambienLight);\r\n\r\n  // add spotlight for the shadows\r\n  var spotLight = new THREE.SpotLight(0xffffff);\r\n  spotLight.position.set(-10, 20, -5);\r\n  spotLight.castShadow = true;\r\n  scene.add(spotLight);\r\n\r\n  // add the output of the renderer to the html element\r\n  document.getElementById(\"webgl-output\").appendChild(renderer.domElement);\r\n\r\n  var controls = new function () {\r\n      var self = this;\r\n  \r\n      this.appliedMaterial = applyMeshStandardMaterial\r\n      this.castShadow = true;\r\n      this.groundPlaneVisible = true;\r\n  \r\n      this.radius = 5;\r\n      this.segments = 128;\r\n  \r\n      this.redraw = function () {\r\n        redrawGeometryAndUpdateUI(gui, scene, controls, function() {\r\n            return new THREE.CircleGeometry(self.radius, self.segments);\r\n        });\r\n      };\r\n    };\r\n  \r\n  var gui = new dat.GUI();\r\n  gui.add(controls, 'radius', 0, 75000000).onChange(controls.redraw);\r\n  \r\n\r\n  render();\r\n  var t = 0 //declaring a variable to iterate in the following function\r\n  function render() {\r\n\r\n    //axis helper along with the scene rendering \r\n    t++\r\n    camera.position.x = 0\r\n    camera.position.y = 0\r\n    camera.updateMatrixWorld()\r\n    var axesPlacement = camera.localToWorld(localToCameraAxesPlacement.clone())\r\n\t\taxisHelper.position.copy(axesPlacement);\r\n\r\n      // update the stats and the controls\r\n    trackballControls.update(clock.getDelta());\r\n      // stats.update();\r\n    requestAnimationFrame(render);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  //Window Resize Function.\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }    \r\n}"],"names":[],"version":3,"file":"circle.5f4786f0.js.map","sourceRoot":"/__parcel_source_root/"}